@startuml new_isp

package com.directi.training.isp.exercise {
  interface Door {
    void lock()
    void unlock()
    void open()
    void close()
  }

  interface ISensingDoor {
    void timeOutCallback()
  }

  interface ITimedDoor {
    void proximityCallback()
  }

  class SensingDoor {
    - _locked: boolean
    - _opened: boolean

    + SensingDoor(sensor: Sensor)
  }

  class Sensor {
    + register(door: Door)
    - isPersonClose(): boolean
  }

  class TimedDoor {
    - TIME_OUT: int
    - _locked: boolean
    - _opened: boolean

    + TimedDoor(timer: Timer)
    + lock()
    + unlock()
    + open()
    + close()
    + timeOutCallback()
    + proximityCallback()
  }

  class Timer {
    + register(timeOut: long, door: Door)
  }
}

Door <|-- ISensingDoor
Door <|-- ITimedDoor
ITimedDoor <.. Timer
ISensingDoor <.. Sensor
ISensingDoor <|.. SensingDoor
ITimedDoor <|.. TimedDoor


@enduml
